// automatically generated by the FlatBuffers compiler, do not modify

package CoffeeTime.Output.Frame;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Sound extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static Sound getRootAsSound(ByteBuffer _bb) { return getRootAsSound(_bb, new Sound()); }
  public static Sound getRootAsSound(ByteBuffer _bb, Sound obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Sound __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean canPlay() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public String path() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pathAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer pathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createSound(FlatBufferBuilder builder,
      boolean canPlay,
      int pathOffset) {
    builder.startTable(2);
    Sound.addPath(builder, pathOffset);
    Sound.addCanPlay(builder, canPlay);
    return Sound.endSound(builder);
  }

  public static void startSound(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addCanPlay(FlatBufferBuilder builder, boolean canPlay) { builder.addBoolean(0, canPlay, false); }
  public static void addPath(FlatBufferBuilder builder, int pathOffset) { builder.addOffset(1, pathOffset, 0); }
  public static int endSound(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Sound get(int j) { return get(new Sound(), j); }
    public Sound get(Sound obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

