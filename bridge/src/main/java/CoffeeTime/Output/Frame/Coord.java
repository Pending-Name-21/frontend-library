// automatically generated by the FlatBuffers compiler, do not modify

package CoffeeTime.Output.Frame;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Coord extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static Coord getRootAsCoord(ByteBuffer _bb) { return getRootAsCoord(_bb, new Coord()); }
  public static Coord getRootAsCoord(ByteBuffer _bb, Coord obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Coord __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int x() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int y() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createCoord(FlatBufferBuilder builder,
      int x,
      int y) {
    builder.startTable(2);
    Coord.addY(builder, y);
    Coord.addX(builder, x);
    return Coord.endCoord(builder);
  }

  public static void startCoord(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addX(FlatBufferBuilder builder, int x) { builder.addInt(0, x, 0); }
  public static void addY(FlatBufferBuilder builder, int y) { builder.addInt(1, y, 0); }
  public static int endCoord(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Coord get(int j) { return get(new Coord(), j); }
    public Coord get(Coord obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

